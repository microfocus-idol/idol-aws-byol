AWSTemplateFormatVersion: '2010-09-09'

Description: Amazon AWS EC2 template for Basic IDOL deployment

Parameters:
  ContentInstanceType:
    Type: String
    Description: 'AWS EC2 InstanceType for the Content instance'
    Default: c5d.2xlarge
    AllowedValues: [
                     "t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large", "t2.xlarge", "t2.2xlarge",
                     "t3.nano", "t3.micro", "t3.small", "t3.medium", "t3.large", "t3.xlarge", "t3.2xlarge",
                     "t3a.nano", "t3a.micro", "t3a.small", "t3a.medium", "t3a.large", "t3a.xlarge", "t3a.2xlarge",
                     "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge",
                     "c5.large", "c5.xlarge", "c5.2xlarge", "c5.4xlarge", "c5.9xlarge", "c5.12xlarge", "c5.18xlarge", "c5.24xlarge", "c5.metal",
                     "c5a.large", "c5a.xlarge", "c5a.2xlarge", "c5a.4xlarge", "c5a.8xlarge", "c5a.12xlarge", "c5a.16xlarge", "c5a.24xlarge",
                     "c5ad.large", "c5ad.xlarge", "c5ad.2xlarge", "c5ad.4xlarge", "c5ad.8xlarge", "c5ad.12xlarge", "c5ad.16xlarge", "c5ad.24xlarge",
                     "c5d.large", "c5d.xlarge", "c5d.2xlarge", "c5d.4xlarge", "c5d.9xlarge", "c5d.12xlarge", "c5d.18xlarge", "c5d.24xlarge", "c5d.metal",
                     "c5n.large", "c5n.xlarge", "c5n.2xlarge", "c5n.4xlarge", "c5n.9xlarge", "c5n.18xlarge", "c5n.metal",
                     "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge",
                     "d3.xlarge", "d3.2xlarge", "d3.4xlarge", "d3.8xlarge",
                     "d3en.xlarge", "d3en.2xlarge", "d3en.4xlarge", "d3en.6xlarge", "d3en.8xlarge", "d3en.12xlarge",
                     "f1.2xlarge", "f1.4xlarge", "f1.16xlarge",
                     "g3s.xlarge", "g3.4xlarge", "g3.8xlarge", "g3.16xlarge",
                     "g4ad.4xlarge", "g4ad.8xlarge", "g4ad.16xlarge",
                     "g4dn.xlarge", "g4dn.2xlarge", "g4dn.4xlarge", "g4dn.8xlarge", "g4dn.16xlarge", "g4dn.12xlarge", "g4dn.metal",
                     "h1.2xlarge", "h1.4xlarge", "h1.8xlarge", "h1.16xlarge" ,
                     "i3.large", "i3.xlarge", "i3.2xlarge", "i3.4xlarge", "i3.8xlarge", "i3.16xlarge", "i3.metal",
                     "i3en.large", "i3en.xlarge", "i3en.2xlarge", "i3en.3xlarge", "i3en.6xlarge", "i3en.12xlarge", "i3en.24xlarge", "i3en.metal",
                     "inf1.xlarge", "inf1.2xlarge", "inf1.6xlarge", "inf1.24xlarge",
                     "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "m4.16xlarge",
                     "m5.large", "m5.xlarge", "m5.2xlarge", "m5.4xlarge", "m5.12xlarge", "m5.16xlarge", "m5.24xlarge", "m5.metal",
                     "m5a.large", "m5a.xlarge", "m5a.2xlarge", "m5a.4xlarge", "m5a.12xlarge", "m5a.16xlarge", "m5a.24xlarge",
                     "m5ad.large", "m5ad.xlarge", "m5ad.2xlarge", "m5ad.4xlarge", "m5ad.12xlarge", "m5ad.16xlarge", "m5ad.24xlarge",
                     "m5d.large", "m5d.xlarge", "m5d.2xlarge", "m5d.4xlarge", "m5d.12xlarge", "m5d.16xlarge", "m5d.24xlarge", "m5d.metal",
                     "m5dn.large", "m5dn.xlarge", "m5dn.2xlarge", "m5dn.4xlarge", "m5dn.12xlarge", "m5dn.16xlarge", "m5dn.24xlarge", "m5dn.metal",
                     "m5n.large", "m5n.xlarge", "m5n.2xlarge", "m5n.4xlarge", "m5n.12xlarge", "m5n.16xlarge", "m5n.24xlarge", "m5n.metal",
                     "m5zn.large", "m5zn.xlarge", "m5zn.2xlarge", "m5zn.3xlarge", "m5zn.6xlarge", "m5zn.12xlarge", "m5zn.metal",
                     "p2.xlarge", "p2.8xlarge", "p2.16xlarge",
                     "p3.2xlarge", "p3.8xlarge", "p3.16xlarge", "p3dn.24xlarge",
                     "p4d.24xlarge",
                     "r4.large", "r4.xlarge", "r4.2xlarge", "r4.4xlarge", "r4.8xlarge", "r4.16xlarge",
                     "r5.large", "r5.xlarge", "r5.2xlarge", "r5.4xlarge", "r5.8xlarge", "r5.12xlarge", "r5.16xlarge", "r5.24xlarge", "r5.metal",
                     "r5a.large", "r5a.xlarge", "r5a.2xlarge", "r5a.4xlarge", "r5a.8xlarge", "r5a.12xlarge", "r5a.16xlarge", "r5a.24xlarge",
                     "r5ad.large", "r5ad.xlarge", "r5ad.2xlarge", "r5ad.4xlarge", "r5ad.8xlarge", "r5ad.12xlarge", "r5ad.16xlarge", "r5ad.24xlarge",
                     "r5b.large", "r5b.xlarge", "r5b.2xlarge", "r5b.4xlarge", "r5b.8xlarge", "r5b.12xlarge", "r5b.16xlarge", "r5b.24xlarge",
                     "r5d.large", "r5d.xlarge", "r5d.2xlarge", "r5d.4xlarge", "r5d.8xlarge", "r5d.12xlarge", "r5d.16xlarge", "r5d.24xlarge", "r5d.metal",
                     "r5dn.large", "r5dn.xlarge", "r5dn.2xlarge", "r5dn.4xlarge", "r5dn.8xlarge", "r5dn.12xlarge", "r5dn.16xlarge", "r5dn.24xlarge", "r5dn.metal",
                     "r5n.large", "r5n.xlarge", "r5n.2xlarge", "r5n.4xlarge", "r5n.8xlarge", "r5n.12xlarge", "r5n.16xlarge", "r5n.24xlarge", "r5n.metal",
                     "x1.16xlarge", "x1.32xlarge",
                     "x1e.xlarge", "x1e.2xlarge", "x1e.4xlarge", "x1e.8xlarge", "x1e.16xlarge", "x1e.32xlarge",
                     "u-6tb1.metal", "u-9tb1.metal", "u-12tb1.metal", "u-18tb1.metal", "u-24tb1.metal",
                     "z1d.large", "z1d.xlarge", "z1d.2xlarge", "z1d.3xlarge", "z1d.6xlarge", "z1d.12xlarge", "z1d.metal"
                   ]
  DAHInstanceType:
    Type: String
    Description: 'AWS EC2 InstanceType for the DAH instance'
    Default: t2.small
    AllowedValues: [
                    "t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large", "t2.xlarge", "t2.2xlarge",
                    "t3.nano", "t3.micro", "t3.small", "t3.medium", "t3.large", "t3.xlarge", "t3.2xlarge",
                    "t3a.nano", "t3a.micro", "t3a.small", "t3a.medium", "t3a.large", "t3a.xlarge", "t3a.2xlarge",
                    "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge",
                    "c5.large", "c5.xlarge", "c5.2xlarge", "c5.4xlarge", "c5.9xlarge", "c5.12xlarge", "c5.18xlarge", "c5.24xlarge", "c5.metal",
                    "c5a.large", "c5a.xlarge", "c5a.2xlarge", "c5a.4xlarge", "c5a.8xlarge", "c5a.12xlarge", "c5a.16xlarge", "c5a.24xlarge",
                    "c5ad.large", "c5ad.xlarge", "c5ad.2xlarge", "c5ad.4xlarge", "c5ad.8xlarge", "c5ad.12xlarge", "c5ad.16xlarge", "c5ad.24xlarge",
                    "c5d.large", "c5d.xlarge", "c5d.2xlarge", "c5d.4xlarge", "c5d.9xlarge", "c5d.12xlarge", "c5d.18xlarge", "c5d.24xlarge", "c5d.metal",
                    "c5n.large", "c5n.xlarge", "c5n.2xlarge", "c5n.4xlarge", "c5n.9xlarge", "c5n.18xlarge", "c5n.metal",
                    "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge",
                    "d3.xlarge", "d3.2xlarge", "d3.4xlarge", "d3.8xlarge",
                    "d3en.xlarge", "d3en.2xlarge", "d3en.4xlarge", "d3en.6xlarge", "d3en.8xlarge", "d3en.12xlarge",
                    "f1.2xlarge", "f1.4xlarge", "f1.16xlarge",
                    "g3s.xlarge", "g3.4xlarge", "g3.8xlarge", "g3.16xlarge",
                    "g4ad.4xlarge", "g4ad.8xlarge", "g4ad.16xlarge",
                    "g4dn.xlarge", "g4dn.2xlarge", "g4dn.4xlarge", "g4dn.8xlarge", "g4dn.16xlarge", "g4dn.12xlarge", "g4dn.metal",
                    "h1.2xlarge", "h1.4xlarge", "h1.8xlarge", "h1.16xlarge" ,
                    "i3.large", "i3.xlarge", "i3.2xlarge", "i3.4xlarge", "i3.8xlarge", "i3.16xlarge", "i3.metal",
                    "i3en.large", "i3en.xlarge", "i3en.2xlarge", "i3en.3xlarge", "i3en.6xlarge", "i3en.12xlarge", "i3en.24xlarge", "i3en.metal",
                    "inf1.xlarge", "inf1.2xlarge", "inf1.6xlarge", "inf1.24xlarge",
                    "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "m4.16xlarge",
                    "m5.large", "m5.xlarge", "m5.2xlarge", "m5.4xlarge", "m5.12xlarge", "m5.16xlarge", "m5.24xlarge", "m5.metal",
                    "m5a.large", "m5a.xlarge", "m5a.2xlarge", "m5a.4xlarge", "m5a.12xlarge", "m5a.16xlarge", "m5a.24xlarge",
                    "m5ad.large", "m5ad.xlarge", "m5ad.2xlarge", "m5ad.4xlarge", "m5ad.12xlarge", "m5ad.16xlarge", "m5ad.24xlarge",
                    "m5d.large", "m5d.xlarge", "m5d.2xlarge", "m5d.4xlarge", "m5d.12xlarge", "m5d.16xlarge", "m5d.24xlarge", "m5d.metal",
                    "m5dn.large", "m5dn.xlarge", "m5dn.2xlarge", "m5dn.4xlarge", "m5dn.12xlarge", "m5dn.16xlarge", "m5dn.24xlarge", "m5dn.metal",
                    "m5n.large", "m5n.xlarge", "m5n.2xlarge", "m5n.4xlarge", "m5n.12xlarge", "m5n.16xlarge", "m5n.24xlarge", "m5n.metal",
                    "m5zn.large", "m5zn.xlarge", "m5zn.2xlarge", "m5zn.3xlarge", "m5zn.6xlarge", "m5zn.12xlarge", "m5zn.metal",
                    "p2.xlarge", "p2.8xlarge", "p2.16xlarge",
                    "p3.2xlarge", "p3.8xlarge", "p3.16xlarge", "p3dn.24xlarge",
                    "p4d.24xlarge",
                    "r4.large", "r4.xlarge", "r4.2xlarge", "r4.4xlarge", "r4.8xlarge", "r4.16xlarge",
                    "r5.large", "r5.xlarge", "r5.2xlarge", "r5.4xlarge", "r5.8xlarge", "r5.12xlarge", "r5.16xlarge", "r5.24xlarge", "r5.metal",
                    "r5a.large", "r5a.xlarge", "r5a.2xlarge", "r5a.4xlarge", "r5a.8xlarge", "r5a.12xlarge", "r5a.16xlarge", "r5a.24xlarge",
                    "r5ad.large", "r5ad.xlarge", "r5ad.2xlarge", "r5ad.4xlarge", "r5ad.8xlarge", "r5ad.12xlarge", "r5ad.16xlarge", "r5ad.24xlarge",
                    "r5b.large", "r5b.xlarge", "r5b.2xlarge", "r5b.4xlarge", "r5b.8xlarge", "r5b.12xlarge", "r5b.16xlarge", "r5b.24xlarge",
                    "r5d.large", "r5d.xlarge", "r5d.2xlarge", "r5d.4xlarge", "r5d.8xlarge", "r5d.12xlarge", "r5d.16xlarge", "r5d.24xlarge", "r5d.metal",
                    "r5dn.large", "r5dn.xlarge", "r5dn.2xlarge", "r5dn.4xlarge", "r5dn.8xlarge", "r5dn.12xlarge", "r5dn.16xlarge", "r5dn.24xlarge", "r5dn.metal",
                    "r5n.large", "r5n.xlarge", "r5n.2xlarge", "r5n.4xlarge", "r5n.8xlarge", "r5n.12xlarge", "r5n.16xlarge", "r5n.24xlarge", "r5n.metal",
                    "x1.16xlarge", "x1.32xlarge",
                    "x1e.xlarge", "x1e.2xlarge", "x1e.4xlarge", "x1e.8xlarge", "x1e.16xlarge", "x1e.32xlarge",
                    "u-6tb1.metal", "u-9tb1.metal", "u-12tb1.metal", "u-18tb1.metal", "u-24tb1.metal",
                    "z1d.large", "z1d.xlarge", "z1d.2xlarge", "z1d.3xlarge", "z1d.6xlarge", "z1d.12xlarge", "z1d.metal"
                  ]
  DIHInstanceType:
    Type: String
    Description: 'AWS EC2 InstanceType for the DIH instance'
    Default: t2.small
    AllowedValues: [
                    "t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large", "t2.xlarge", "t2.2xlarge",
                    "t3.nano", "t3.micro", "t3.small", "t3.medium", "t3.large", "t3.xlarge", "t3.2xlarge",
                    "t3a.nano", "t3a.micro", "t3a.small", "t3a.medium", "t3a.large", "t3a.xlarge", "t3a.2xlarge",
                    "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge",
                    "c5.large", "c5.xlarge", "c5.2xlarge", "c5.4xlarge", "c5.9xlarge", "c5.12xlarge", "c5.18xlarge", "c5.24xlarge", "c5.metal",
                    "c5a.large", "c5a.xlarge", "c5a.2xlarge", "c5a.4xlarge", "c5a.8xlarge", "c5a.12xlarge", "c5a.16xlarge", "c5a.24xlarge",
                    "c5ad.large", "c5ad.xlarge", "c5ad.2xlarge", "c5ad.4xlarge", "c5ad.8xlarge", "c5ad.12xlarge", "c5ad.16xlarge", "c5ad.24xlarge",
                    "c5d.large", "c5d.xlarge", "c5d.2xlarge", "c5d.4xlarge", "c5d.9xlarge", "c5d.12xlarge", "c5d.18xlarge", "c5d.24xlarge", "c5d.metal",
                    "c5n.large", "c5n.xlarge", "c5n.2xlarge", "c5n.4xlarge", "c5n.9xlarge", "c5n.18xlarge", "c5n.metal",
                    "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge",
                    "d3.xlarge", "d3.2xlarge", "d3.4xlarge", "d3.8xlarge",
                    "d3en.xlarge", "d3en.2xlarge", "d3en.4xlarge", "d3en.6xlarge", "d3en.8xlarge", "d3en.12xlarge",
                    "f1.2xlarge", "f1.4xlarge", "f1.16xlarge",
                    "g3s.xlarge", "g3.4xlarge", "g3.8xlarge", "g3.16xlarge",
                    "g4ad.4xlarge", "g4ad.8xlarge", "g4ad.16xlarge",
                    "g4dn.xlarge", "g4dn.2xlarge", "g4dn.4xlarge", "g4dn.8xlarge", "g4dn.16xlarge", "g4dn.12xlarge", "g4dn.metal",
                    "h1.2xlarge", "h1.4xlarge", "h1.8xlarge", "h1.16xlarge" ,
                    "i3.large", "i3.xlarge", "i3.2xlarge", "i3.4xlarge", "i3.8xlarge", "i3.16xlarge", "i3.metal",
                    "i3en.large", "i3en.xlarge", "i3en.2xlarge", "i3en.3xlarge", "i3en.6xlarge", "i3en.12xlarge", "i3en.24xlarge", "i3en.metal",
                    "inf1.xlarge", "inf1.2xlarge", "inf1.6xlarge", "inf1.24xlarge",
                    "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "m4.16xlarge",
                    "m5.large", "m5.xlarge", "m5.2xlarge", "m5.4xlarge", "m5.12xlarge", "m5.16xlarge", "m5.24xlarge", "m5.metal",
                    "m5a.large", "m5a.xlarge", "m5a.2xlarge", "m5a.4xlarge", "m5a.12xlarge", "m5a.16xlarge", "m5a.24xlarge",
                    "m5ad.large", "m5ad.xlarge", "m5ad.2xlarge", "m5ad.4xlarge", "m5ad.12xlarge", "m5ad.16xlarge", "m5ad.24xlarge",
                    "m5d.large", "m5d.xlarge", "m5d.2xlarge", "m5d.4xlarge", "m5d.12xlarge", "m5d.16xlarge", "m5d.24xlarge", "m5d.metal",
                    "m5dn.large", "m5dn.xlarge", "m5dn.2xlarge", "m5dn.4xlarge", "m5dn.12xlarge", "m5dn.16xlarge", "m5dn.24xlarge", "m5dn.metal",
                    "m5n.large", "m5n.xlarge", "m5n.2xlarge", "m5n.4xlarge", "m5n.12xlarge", "m5n.16xlarge", "m5n.24xlarge", "m5n.metal",
                    "m5zn.large", "m5zn.xlarge", "m5zn.2xlarge", "m5zn.3xlarge", "m5zn.6xlarge", "m5zn.12xlarge", "m5zn.metal",
                    "p2.xlarge", "p2.8xlarge", "p2.16xlarge",
                    "p3.2xlarge", "p3.8xlarge", "p3.16xlarge", "p3dn.24xlarge",
                    "p4d.24xlarge",
                    "r4.large", "r4.xlarge", "r4.2xlarge", "r4.4xlarge", "r4.8xlarge", "r4.16xlarge",
                    "r5.large", "r5.xlarge", "r5.2xlarge", "r5.4xlarge", "r5.8xlarge", "r5.12xlarge", "r5.16xlarge", "r5.24xlarge", "r5.metal",
                    "r5a.large", "r5a.xlarge", "r5a.2xlarge", "r5a.4xlarge", "r5a.8xlarge", "r5a.12xlarge", "r5a.16xlarge", "r5a.24xlarge",
                    "r5ad.large", "r5ad.xlarge", "r5ad.2xlarge", "r5ad.4xlarge", "r5ad.8xlarge", "r5ad.12xlarge", "r5ad.16xlarge", "r5ad.24xlarge",
                    "r5b.large", "r5b.xlarge", "r5b.2xlarge", "r5b.4xlarge", "r5b.8xlarge", "r5b.12xlarge", "r5b.16xlarge", "r5b.24xlarge",
                    "r5d.large", "r5d.xlarge", "r5d.2xlarge", "r5d.4xlarge", "r5d.8xlarge", "r5d.12xlarge", "r5d.16xlarge", "r5d.24xlarge", "r5d.metal",
                    "r5dn.large", "r5dn.xlarge", "r5dn.2xlarge", "r5dn.4xlarge", "r5dn.8xlarge", "r5dn.12xlarge", "r5dn.16xlarge", "r5dn.24xlarge", "r5dn.metal",
                    "r5n.large", "r5n.xlarge", "r5n.2xlarge", "r5n.4xlarge", "r5n.8xlarge", "r5n.12xlarge", "r5n.16xlarge", "r5n.24xlarge", "r5n.metal",
                    "x1.16xlarge", "x1.32xlarge",
                    "x1e.xlarge", "x1e.2xlarge", "x1e.4xlarge", "x1e.8xlarge", "x1e.16xlarge", "x1e.32xlarge",
                    "u-6tb1.metal", "u-9tb1.metal", "u-12tb1.metal", "u-18tb1.metal", "u-24tb1.metal",
                    "z1d.large", "z1d.xlarge", "z1d.2xlarge", "z1d.3xlarge", "z1d.6xlarge", "z1d.12xlarge", "z1d.metal"
                  ]
  StaticServersInstanceType:
    Type: String
    Description: 'AWS EC2 InstanceType for the static servers instance'
    Default: t2.medium
    AllowedValues: [
                    "t2.small", "t2.medium", "t2.large", "t2.xlarge", "t2.2xlarge",
                    "t3.small", "t3.medium", "t3.large", "t3.xlarge", "t3.2xlarge",
                    "t3a.small", "t3a.medium", "t3a.large", "t3a.xlarge", "t3a.2xlarge",
                    "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge",
                    "c5.large", "c5.xlarge", "c5.2xlarge", "c5.4xlarge", "c5.9xlarge", "c5.12xlarge", "c5.18xlarge", "c5.24xlarge", "c5.metal",
                    "c5a.large", "c5a.xlarge", "c5a.2xlarge", "c5a.4xlarge", "c5a.8xlarge", "c5a.12xlarge", "c5a.16xlarge", "c5a.24xlarge",
                    "c5ad.large", "c5ad.xlarge", "c5ad.2xlarge", "c5ad.4xlarge", "c5ad.8xlarge", "c5ad.12xlarge", "c5ad.16xlarge", "c5ad.24xlarge",
                    "c5d.large", "c5d.xlarge", "c5d.2xlarge", "c5d.4xlarge", "c5d.9xlarge", "c5d.12xlarge", "c5d.18xlarge", "c5d.24xlarge", "c5d.metal",
                    "c5n.large", "c5n.xlarge", "c5n.2xlarge", "c5n.4xlarge", "c5n.9xlarge", "c5n.18xlarge", "c5n.metal",
                    "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge",
                    "d3.xlarge", "d3.2xlarge", "d3.4xlarge", "d3.8xlarge",
                    "d3en.xlarge", "d3en.2xlarge", "d3en.4xlarge", "d3en.6xlarge", "d3en.8xlarge", "d3en.12xlarge",
                    "f1.2xlarge", "f1.4xlarge", "f1.16xlarge",
                    "g3s.xlarge", "g3.4xlarge", "g3.8xlarge", "g3.16xlarge",
                    "g4ad.4xlarge", "g4ad.8xlarge", "g4ad.16xlarge",
                    "g4dn.xlarge", "g4dn.2xlarge", "g4dn.4xlarge", "g4dn.8xlarge", "g4dn.16xlarge", "g4dn.12xlarge", "g4dn.metal",
                    "h1.2xlarge", "h1.4xlarge", "h1.8xlarge", "h1.16xlarge" ,
                    "i3.large", "i3.xlarge", "i3.2xlarge", "i3.4xlarge", "i3.8xlarge", "i3.16xlarge", "i3.metal",
                    "i3en.large", "i3en.xlarge", "i3en.2xlarge", "i3en.3xlarge", "i3en.6xlarge", "i3en.12xlarge", "i3en.24xlarge", "i3en.metal",
                    "inf1.xlarge", "inf1.2xlarge", "inf1.6xlarge", "inf1.24xlarge",
                    "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "m4.16xlarge",
                    "m5.large", "m5.xlarge", "m5.2xlarge", "m5.4xlarge", "m5.12xlarge", "m5.16xlarge", "m5.24xlarge", "m5.metal",
                    "m5a.large", "m5a.xlarge", "m5a.2xlarge", "m5a.4xlarge", "m5a.12xlarge", "m5a.16xlarge", "m5a.24xlarge",
                    "m5ad.large", "m5ad.xlarge", "m5ad.2xlarge", "m5ad.4xlarge", "m5ad.12xlarge", "m5ad.16xlarge", "m5ad.24xlarge",
                    "m5d.large", "m5d.xlarge", "m5d.2xlarge", "m5d.4xlarge", "m5d.12xlarge", "m5d.16xlarge", "m5d.24xlarge", "m5d.metal",
                    "m5dn.large", "m5dn.xlarge", "m5dn.2xlarge", "m5dn.4xlarge", "m5dn.12xlarge", "m5dn.16xlarge", "m5dn.24xlarge", "m5dn.metal",
                    "m5n.large", "m5n.xlarge", "m5n.2xlarge", "m5n.4xlarge", "m5n.12xlarge", "m5n.16xlarge", "m5n.24xlarge", "m5n.metal",
                    "m5zn.large", "m5zn.xlarge", "m5zn.2xlarge", "m5zn.3xlarge", "m5zn.6xlarge", "m5zn.12xlarge", "m5zn.metal",
                    "p2.xlarge", "p2.8xlarge", "p2.16xlarge",
                    "p3.2xlarge", "p3.8xlarge", "p3.16xlarge", "p3dn.24xlarge",
                    "p4d.24xlarge",
                    "r4.large", "r4.xlarge", "r4.2xlarge", "r4.4xlarge", "r4.8xlarge", "r4.16xlarge",
                    "r5.large", "r5.xlarge", "r5.2xlarge", "r5.4xlarge", "r5.8xlarge", "r5.12xlarge", "r5.16xlarge", "r5.24xlarge", "r5.metal",
                    "r5a.large", "r5a.xlarge", "r5a.2xlarge", "r5a.4xlarge", "r5a.8xlarge", "r5a.12xlarge", "r5a.16xlarge", "r5a.24xlarge",
                    "r5ad.large", "r5ad.xlarge", "r5ad.2xlarge", "r5ad.4xlarge", "r5ad.8xlarge", "r5ad.12xlarge", "r5ad.16xlarge", "r5ad.24xlarge",
                    "r5b.large", "r5b.xlarge", "r5b.2xlarge", "r5b.4xlarge", "r5b.8xlarge", "r5b.12xlarge", "r5b.16xlarge", "r5b.24xlarge",
                    "r5d.large", "r5d.xlarge", "r5d.2xlarge", "r5d.4xlarge", "r5d.8xlarge", "r5d.12xlarge", "r5d.16xlarge", "r5d.24xlarge", "r5d.metal",
                    "r5dn.large", "r5dn.xlarge", "r5dn.2xlarge", "r5dn.4xlarge", "r5dn.8xlarge", "r5dn.12xlarge", "r5dn.16xlarge", "r5dn.24xlarge", "r5dn.metal",
                    "r5n.large", "r5n.xlarge", "r5n.2xlarge", "r5n.4xlarge", "r5n.8xlarge", "r5n.12xlarge", "r5n.16xlarge", "r5n.24xlarge", "r5n.metal",
                    "x1.16xlarge", "x1.32xlarge",
                    "x1e.xlarge", "x1e.2xlarge", "x1e.4xlarge", "x1e.8xlarge", "x1e.16xlarge", "x1e.32xlarge",
                    "u-6tb1.metal", "u-9tb1.metal", "u-12tb1.metal", "u-18tb1.metal", "u-24tb1.metal",
                    "z1d.large", "z1d.xlarge", "z1d.2xlarge", "z1d.3xlarge", "z1d.6xlarge", "z1d.12xlarge", "z1d.metal"
                  ]
  LicenseServerInstanceType:
    Type: String
    Description: 'AWS EC2 InstanceType for the LicenseServer instance'
    Default: t2.micro
    AllowedValues: [
                    "t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large", "t2.xlarge", "t2.2xlarge",
                    "t3.nano", "t3.micro", "t3.small", "t3.medium", "t3.large", "t3.xlarge", "t3.2xlarge",
                    "t3a.nano", "t3a.micro", "t3a.small", "t3a.medium", "t3a.large", "t3a.xlarge", "t3a.2xlarge",
                    "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge",
                    "c5.large", "c5.xlarge", "c5.2xlarge", "c5.4xlarge", "c5.9xlarge", "c5.12xlarge", "c5.18xlarge", "c5.24xlarge", "c5.metal",
                    "c5a.large", "c5a.xlarge", "c5a.2xlarge", "c5a.4xlarge", "c5a.8xlarge", "c5a.12xlarge", "c5a.16xlarge", "c5a.24xlarge",
                    "c5ad.large", "c5ad.xlarge", "c5ad.2xlarge", "c5ad.4xlarge", "c5ad.8xlarge", "c5ad.12xlarge", "c5ad.16xlarge", "c5ad.24xlarge",
                    "c5d.large", "c5d.xlarge", "c5d.2xlarge", "c5d.4xlarge", "c5d.9xlarge", "c5d.12xlarge", "c5d.18xlarge", "c5d.24xlarge", "c5d.metal",
                    "c5n.large", "c5n.xlarge", "c5n.2xlarge", "c5n.4xlarge", "c5n.9xlarge", "c5n.18xlarge", "c5n.metal",
                    "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge",
                    "d3.xlarge", "d3.2xlarge", "d3.4xlarge", "d3.8xlarge",
                    "d3en.xlarge", "d3en.2xlarge", "d3en.4xlarge", "d3en.6xlarge", "d3en.8xlarge", "d3en.12xlarge",
                    "f1.2xlarge", "f1.4xlarge", "f1.16xlarge",
                    "g3s.xlarge", "g3.4xlarge", "g3.8xlarge", "g3.16xlarge",
                    "g4ad.4xlarge", "g4ad.8xlarge", "g4ad.16xlarge",
                    "g4dn.xlarge", "g4dn.2xlarge", "g4dn.4xlarge", "g4dn.8xlarge", "g4dn.16xlarge", "g4dn.12xlarge", "g4dn.metal",
                    "h1.2xlarge", "h1.4xlarge", "h1.8xlarge", "h1.16xlarge" ,
                    "i3.large", "i3.xlarge", "i3.2xlarge", "i3.4xlarge", "i3.8xlarge", "i3.16xlarge", "i3.metal",
                    "i3en.large", "i3en.xlarge", "i3en.2xlarge", "i3en.3xlarge", "i3en.6xlarge", "i3en.12xlarge", "i3en.24xlarge", "i3en.metal",
                    "inf1.xlarge", "inf1.2xlarge", "inf1.6xlarge", "inf1.24xlarge",
                    "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "m4.16xlarge",
                    "m5.large", "m5.xlarge", "m5.2xlarge", "m5.4xlarge", "m5.12xlarge", "m5.16xlarge", "m5.24xlarge", "m5.metal",
                    "m5a.large", "m5a.xlarge", "m5a.2xlarge", "m5a.4xlarge", "m5a.12xlarge", "m5a.16xlarge", "m5a.24xlarge",
                    "m5ad.large", "m5ad.xlarge", "m5ad.2xlarge", "m5ad.4xlarge", "m5ad.12xlarge", "m5ad.16xlarge", "m5ad.24xlarge",
                    "m5d.large", "m5d.xlarge", "m5d.2xlarge", "m5d.4xlarge", "m5d.12xlarge", "m5d.16xlarge", "m5d.24xlarge", "m5d.metal",
                    "m5dn.large", "m5dn.xlarge", "m5dn.2xlarge", "m5dn.4xlarge", "m5dn.12xlarge", "m5dn.16xlarge", "m5dn.24xlarge", "m5dn.metal",
                    "m5n.large", "m5n.xlarge", "m5n.2xlarge", "m5n.4xlarge", "m5n.12xlarge", "m5n.16xlarge", "m5n.24xlarge", "m5n.metal",
                    "m5zn.large", "m5zn.xlarge", "m5zn.2xlarge", "m5zn.3xlarge", "m5zn.6xlarge", "m5zn.12xlarge", "m5zn.metal",
                    "p2.xlarge", "p2.8xlarge", "p2.16xlarge",
                    "p3.2xlarge", "p3.8xlarge", "p3.16xlarge", "p3dn.24xlarge",
                    "p4d.24xlarge",
                    "r4.large", "r4.xlarge", "r4.2xlarge", "r4.4xlarge", "r4.8xlarge", "r4.16xlarge",
                    "r5.large", "r5.xlarge", "r5.2xlarge", "r5.4xlarge", "r5.8xlarge", "r5.12xlarge", "r5.16xlarge", "r5.24xlarge", "r5.metal",
                    "r5a.large", "r5a.xlarge", "r5a.2xlarge", "r5a.4xlarge", "r5a.8xlarge", "r5a.12xlarge", "r5a.16xlarge", "r5a.24xlarge",
                    "r5ad.large", "r5ad.xlarge", "r5ad.2xlarge", "r5ad.4xlarge", "r5ad.8xlarge", "r5ad.12xlarge", "r5ad.16xlarge", "r5ad.24xlarge",
                    "r5b.large", "r5b.xlarge", "r5b.2xlarge", "r5b.4xlarge", "r5b.8xlarge", "r5b.12xlarge", "r5b.16xlarge", "r5b.24xlarge",
                    "r5d.large", "r5d.xlarge", "r5d.2xlarge", "r5d.4xlarge", "r5d.8xlarge", "r5d.12xlarge", "r5d.16xlarge", "r5d.24xlarge", "r5d.metal",
                    "r5dn.large", "r5dn.xlarge", "r5dn.2xlarge", "r5dn.4xlarge", "r5dn.8xlarge", "r5dn.12xlarge", "r5dn.16xlarge", "r5dn.24xlarge", "r5dn.metal",
                    "r5n.large", "r5n.xlarge", "r5n.2xlarge", "r5n.4xlarge", "r5n.8xlarge", "r5n.12xlarge", "r5n.16xlarge", "r5n.24xlarge", "r5n.metal",
                    "x1.16xlarge", "x1.32xlarge",
                    "x1e.xlarge", "x1e.2xlarge", "x1e.4xlarge", "x1e.8xlarge", "x1e.16xlarge", "x1e.32xlarge",
                    "u-6tb1.metal", "u-9tb1.metal", "u-12tb1.metal", "u-18tb1.metal", "u-24tb1.metal",
                    "z1d.large", "z1d.xlarge", "z1d.2xlarge", "z1d.3xlarge", "z1d.6xlarge", "z1d.12xlarge", "z1d.metal"
                  ]
                  
  GatewayProxyInstanceType:
    Type: String
    Description: 'AWS EC2 InstanceType for the Gateway Proxy instance'
    Default: t2.micro
    AllowedValues: [
                    "t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large", "t2.xlarge", "t2.2xlarge",
                    "t3.nano", "t3.micro", "t3.small", "t3.medium", "t3.large", "t3.xlarge", "t3.2xlarge",
                    "t3a.nano", "t3a.micro", "t3a.small", "t3a.medium", "t3a.large", "t3a.xlarge", "t3a.2xlarge",
                    "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge",
                    "c5.large", "c5.xlarge", "c5.2xlarge", "c5.4xlarge", "c5.9xlarge", "c5.12xlarge", "c5.18xlarge", "c5.24xlarge", "c5.metal",
                    "c5a.large", "c5a.xlarge", "c5a.2xlarge", "c5a.4xlarge", "c5a.8xlarge", "c5a.12xlarge", "c5a.16xlarge", "c5a.24xlarge",
                    "c5ad.large", "c5ad.xlarge", "c5ad.2xlarge", "c5ad.4xlarge", "c5ad.8xlarge", "c5ad.12xlarge", "c5ad.16xlarge", "c5ad.24xlarge",
                    "c5d.large", "c5d.xlarge", "c5d.2xlarge", "c5d.4xlarge", "c5d.9xlarge", "c5d.12xlarge", "c5d.18xlarge", "c5d.24xlarge", "c5d.metal",
                    "c5n.large", "c5n.xlarge", "c5n.2xlarge", "c5n.4xlarge", "c5n.9xlarge", "c5n.18xlarge", "c5n.metal",
                    "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge",
                    "d3.xlarge", "d3.2xlarge", "d3.4xlarge", "d3.8xlarge",
                    "d3en.xlarge", "d3en.2xlarge", "d3en.4xlarge", "d3en.6xlarge", "d3en.8xlarge", "d3en.12xlarge",
                    "f1.2xlarge", "f1.4xlarge", "f1.16xlarge",
                    "g3s.xlarge", "g3.4xlarge", "g3.8xlarge", "g3.16xlarge",
                    "g4ad.4xlarge", "g4ad.8xlarge", "g4ad.16xlarge",
                    "g4dn.xlarge", "g4dn.2xlarge", "g4dn.4xlarge", "g4dn.8xlarge", "g4dn.16xlarge", "g4dn.12xlarge", "g4dn.metal",
                    "h1.2xlarge", "h1.4xlarge", "h1.8xlarge", "h1.16xlarge" ,
                    "i3.large", "i3.xlarge", "i3.2xlarge", "i3.4xlarge", "i3.8xlarge", "i3.16xlarge", "i3.metal",
                    "i3en.large", "i3en.xlarge", "i3en.2xlarge", "i3en.3xlarge", "i3en.6xlarge", "i3en.12xlarge", "i3en.24xlarge", "i3en.metal",
                    "inf1.xlarge", "inf1.2xlarge", "inf1.6xlarge", "inf1.24xlarge",
                    "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "m4.16xlarge",
                    "m5.large", "m5.xlarge", "m5.2xlarge", "m5.4xlarge", "m5.12xlarge", "m5.16xlarge", "m5.24xlarge", "m5.metal",
                    "m5a.large", "m5a.xlarge", "m5a.2xlarge", "m5a.4xlarge", "m5a.12xlarge", "m5a.16xlarge", "m5a.24xlarge",
                    "m5ad.large", "m5ad.xlarge", "m5ad.2xlarge", "m5ad.4xlarge", "m5ad.12xlarge", "m5ad.16xlarge", "m5ad.24xlarge",
                    "m5d.large", "m5d.xlarge", "m5d.2xlarge", "m5d.4xlarge", "m5d.12xlarge", "m5d.16xlarge", "m5d.24xlarge", "m5d.metal",
                    "m5dn.large", "m5dn.xlarge", "m5dn.2xlarge", "m5dn.4xlarge", "m5dn.12xlarge", "m5dn.16xlarge", "m5dn.24xlarge", "m5dn.metal",
                    "m5n.large", "m5n.xlarge", "m5n.2xlarge", "m5n.4xlarge", "m5n.12xlarge", "m5n.16xlarge", "m5n.24xlarge", "m5n.metal",
                    "m5zn.large", "m5zn.xlarge", "m5zn.2xlarge", "m5zn.3xlarge", "m5zn.6xlarge", "m5zn.12xlarge", "m5zn.metal",
                    "p2.xlarge", "p2.8xlarge", "p2.16xlarge",
                    "p3.2xlarge", "p3.8xlarge", "p3.16xlarge", "p3dn.24xlarge",
                    "p4d.24xlarge",
                    "r4.large", "r4.xlarge", "r4.2xlarge", "r4.4xlarge", "r4.8xlarge", "r4.16xlarge",
                    "r5.large", "r5.xlarge", "r5.2xlarge", "r5.4xlarge", "r5.8xlarge", "r5.12xlarge", "r5.16xlarge", "r5.24xlarge", "r5.metal",
                    "r5a.large", "r5a.xlarge", "r5a.2xlarge", "r5a.4xlarge", "r5a.8xlarge", "r5a.12xlarge", "r5a.16xlarge", "r5a.24xlarge",
                    "r5ad.large", "r5ad.xlarge", "r5ad.2xlarge", "r5ad.4xlarge", "r5ad.8xlarge", "r5ad.12xlarge", "r5ad.16xlarge", "r5ad.24xlarge",
                    "r5b.large", "r5b.xlarge", "r5b.2xlarge", "r5b.4xlarge", "r5b.8xlarge", "r5b.12xlarge", "r5b.16xlarge", "r5b.24xlarge",
                    "r5d.large", "r5d.xlarge", "r5d.2xlarge", "r5d.4xlarge", "r5d.8xlarge", "r5d.12xlarge", "r5d.16xlarge", "r5d.24xlarge", "r5d.metal",
                    "r5dn.large", "r5dn.xlarge", "r5dn.2xlarge", "r5dn.4xlarge", "r5dn.8xlarge", "r5dn.12xlarge", "r5dn.16xlarge", "r5dn.24xlarge", "r5dn.metal",
                    "r5n.large", "r5n.xlarge", "r5n.2xlarge", "r5n.4xlarge", "r5n.8xlarge", "r5n.12xlarge", "r5n.16xlarge", "r5n.24xlarge", "r5n.metal",
                    "x1.16xlarge", "x1.32xlarge",
                    "x1e.xlarge", "x1e.2xlarge", "x1e.4xlarge", "x1e.8xlarge", "x1e.16xlarge", "x1e.32xlarge",
                    "u-6tb1.metal", "u-9tb1.metal", "u-12tb1.metal", "u-18tb1.metal", "u-24tb1.metal",
                    "z1d.large", "z1d.xlarge", "z1d.2xlarge", "z1d.3xlarge", "z1d.6xlarge", "z1d.12xlarge", "z1d.metal"
                  ]
  NiFiInstanceType:
    Type: String
    Description: 'AWS EC2 InstanceType for the NiFi instance'
    Default: t3.medium
    AllowedValues: [
                    "t2.small", "t2.medium", "t2.large", "t2.xlarge", "t2.2xlarge",
                    "t3.small", "t3.medium", "t3.large", "t3.xlarge", "t3.2xlarge",
                    "t3a.small", "t3a.medium", "t3a.large", "t3a.xlarge", "t3a.2xlarge",
                    "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge",
                    "c5.large", "c5.xlarge", "c5.2xlarge", "c5.4xlarge", "c5.9xlarge", "c5.12xlarge", "c5.18xlarge", "c5.24xlarge", "c5.metal",
                    "c5a.large", "c5a.xlarge", "c5a.2xlarge", "c5a.4xlarge", "c5a.8xlarge", "c5a.12xlarge", "c5a.16xlarge", "c5a.24xlarge",
                    "c5ad.large", "c5ad.xlarge", "c5ad.2xlarge", "c5ad.4xlarge", "c5ad.8xlarge", "c5ad.12xlarge", "c5ad.16xlarge", "c5ad.24xlarge",
                    "c5d.large", "c5d.xlarge", "c5d.2xlarge", "c5d.4xlarge", "c5d.9xlarge", "c5d.12xlarge", "c5d.18xlarge", "c5d.24xlarge", "c5d.metal",
                    "c5n.large", "c5n.xlarge", "c5n.2xlarge", "c5n.4xlarge", "c5n.9xlarge", "c5n.18xlarge", "c5n.metal",
                    "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge",
                    "d3.xlarge", "d3.2xlarge", "d3.4xlarge", "d3.8xlarge",
                    "d3en.xlarge", "d3en.2xlarge", "d3en.4xlarge", "d3en.6xlarge", "d3en.8xlarge", "d3en.12xlarge",
                    "f1.2xlarge", "f1.4xlarge", "f1.16xlarge",
                    "g3s.xlarge", "g3.4xlarge", "g3.8xlarge", "g3.16xlarge",
                    "g4ad.4xlarge", "g4ad.8xlarge", "g4ad.16xlarge",
                    "g4dn.xlarge", "g4dn.2xlarge", "g4dn.4xlarge", "g4dn.8xlarge", "g4dn.16xlarge", "g4dn.12xlarge", "g4dn.metal",
                    "h1.2xlarge", "h1.4xlarge", "h1.8xlarge", "h1.16xlarge" ,
                    "i3.large", "i3.xlarge", "i3.2xlarge", "i3.4xlarge", "i3.8xlarge", "i3.16xlarge", "i3.metal",
                    "i3en.large", "i3en.xlarge", "i3en.2xlarge", "i3en.3xlarge", "i3en.6xlarge", "i3en.12xlarge", "i3en.24xlarge", "i3en.metal",
                    "inf1.xlarge", "inf1.2xlarge", "inf1.6xlarge", "inf1.24xlarge",
                    "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "m4.16xlarge",
                    "m5.large", "m5.xlarge", "m5.2xlarge", "m5.4xlarge", "m5.12xlarge", "m5.16xlarge", "m5.24xlarge", "m5.metal",
                    "m5a.large", "m5a.xlarge", "m5a.2xlarge", "m5a.4xlarge", "m5a.12xlarge", "m5a.16xlarge", "m5a.24xlarge",
                    "m5ad.large", "m5ad.xlarge", "m5ad.2xlarge", "m5ad.4xlarge", "m5ad.12xlarge", "m5ad.16xlarge", "m5ad.24xlarge",
                    "m5d.large", "m5d.xlarge", "m5d.2xlarge", "m5d.4xlarge", "m5d.12xlarge", "m5d.16xlarge", "m5d.24xlarge", "m5d.metal",
                    "m5dn.large", "m5dn.xlarge", "m5dn.2xlarge", "m5dn.4xlarge", "m5dn.12xlarge", "m5dn.16xlarge", "m5dn.24xlarge", "m5dn.metal",
                    "m5n.large", "m5n.xlarge", "m5n.2xlarge", "m5n.4xlarge", "m5n.12xlarge", "m5n.16xlarge", "m5n.24xlarge", "m5n.metal",
                    "m5zn.large", "m5zn.xlarge", "m5zn.2xlarge", "m5zn.3xlarge", "m5zn.6xlarge", "m5zn.12xlarge", "m5zn.metal",
                    "p2.xlarge", "p2.8xlarge", "p2.16xlarge",
                    "p3.2xlarge", "p3.8xlarge", "p3.16xlarge", "p3dn.24xlarge",
                    "p4d.24xlarge",
                    "r4.large", "r4.xlarge", "r4.2xlarge", "r4.4xlarge", "r4.8xlarge", "r4.16xlarge",
                    "r5.large", "r5.xlarge", "r5.2xlarge", "r5.4xlarge", "r5.8xlarge", "r5.12xlarge", "r5.16xlarge", "r5.24xlarge", "r5.metal",
                    "r5a.large", "r5a.xlarge", "r5a.2xlarge", "r5a.4xlarge", "r5a.8xlarge", "r5a.12xlarge", "r5a.16xlarge", "r5a.24xlarge",
                    "r5ad.large", "r5ad.xlarge", "r5ad.2xlarge", "r5ad.4xlarge", "r5ad.8xlarge", "r5ad.12xlarge", "r5ad.16xlarge", "r5ad.24xlarge",
                    "r5b.large", "r5b.xlarge", "r5b.2xlarge", "r5b.4xlarge", "r5b.8xlarge", "r5b.12xlarge", "r5b.16xlarge", "r5b.24xlarge",
                    "r5d.large", "r5d.xlarge", "r5d.2xlarge", "r5d.4xlarge", "r5d.8xlarge", "r5d.12xlarge", "r5d.16xlarge", "r5d.24xlarge", "r5d.metal",
                    "r5dn.large", "r5dn.xlarge", "r5dn.2xlarge", "r5dn.4xlarge", "r5dn.8xlarge", "r5dn.12xlarge", "r5dn.16xlarge", "r5dn.24xlarge", "r5dn.metal",
                    "r5n.large", "r5n.xlarge", "r5n.2xlarge", "r5n.4xlarge", "r5n.8xlarge", "r5n.12xlarge", "r5n.16xlarge", "r5n.24xlarge", "r5n.metal",
                    "x1.16xlarge", "x1.32xlarge",
                    "x1e.xlarge", "x1e.2xlarge", "x1e.4xlarge", "x1e.8xlarge", "x1e.16xlarge", "x1e.32xlarge",
                    "u-6tb1.metal", "u-9tb1.metal", "u-12tb1.metal", "u-18tb1.metal", "u-24tb1.metal",
                    "z1d.large", "z1d.xlarge", "z1d.2xlarge", "z1d.3xlarge", "z1d.6xlarge", "z1d.12xlarge", "z1d.metal"
                  ]
  EngineCount:
    Type: Number
    Description: 'The number of Content engines to deploy'
    Default: 1
    MinValue: 1
    MaxValue: 5
  NiFiS3Bucket:
    Type: String
    Description: S3 Bucket to ingest
  NiFiS3AccessKey:
    Type: String
    Description: AWS Access Key with access to S3 bucket 
    NoEcho: true
  NiFiS3SecretKey:
    Type: String
    Description: AWS Secret Key with access to S3 bucket
    NoEcho: true
  
  LicenseKeyBucketName:
    Type: String
    Description: 'Name of S3 bucket containing license key to deploy'
    AllowedPattern: "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$"
    ConstraintDescription: >-
      The bucket name can include numbers, lowercase letters, uppercase
      letters, and hyphens (-). It cannot start or end with a hyphen (-).
  LicenseKeyBucketRegion:
    Type: String
    Description: 'The AWS Region where the S3 bucket containing the license key (LicenseKeyBucketName) is hosted.'
    AllowedValues: [
      "us-east-1", "us-east-2", "us-west-1", "us-west-2", "af-south-1", "ap-east-1", "ap-south-1",
      "ap-northeast-1", "ap-northeast-2", "ap-northeast-2", "ap-southeast-1", "ap-southeast-2",
      "ca-central-1", "eu-central-1", "eu-west-1", "eu-west-2", "eu-west-3", "eu-south-1", "eu-north-1",
      "me-south-1", "sa-east-1", "us-gov-east-1", "us-gov-west-1"]
  LicenseKeyBucketPath:
    Type: String
    Description: 'Path to license key within the bucket'
    Default: 'licensekey.dat'

  VpcCIDR:
    Type: String
    Description: 'The CIDR of the VPC. Smallest block /27; e.g. 172.16.0.0/27.'
    AllowedPattern: '((2[0-4]\d|25[0-5]|1\d{2}|\d{1,2})\.){3}(2[0-4]\d|25[0-5]|1\d{2}|\d{1,2})/(2[0-7]|1[0-9]|[0-9])'
    ConstraintDescription: 'must be a valid IPv4 CIDR with smallest block of /27'

  PublicSubnetCIDR:
    Type: String
    Description: 'The CIDR of the Public Subnet. Subnet of VpcCIDR, disjoint of PrivateSubnetCIDR, smallest block /28 e.g. 172.16.0.0/28.'
    AllowedPattern: '((2[0-4]\d|25[0-5]|1\d{2}|\d{1,2})\.){3}(2[0-4]\d|25[0-5]|1\d{2}|\d{1,2})/(2[0-8]|1[0-9]|[0-9])'
    ConstraintDescription: 'must be a valid IPv4 CIDR with smallest block of /28'

  PrivateSubnetCIDR:
    Type: String
    Description: 'The CIDR of the Private Subnet. Subnet of VpcCIDR, disjoint of PublicSubnetCIDR, smallest block /28 e.g. 172.16.0.16/28.'
    AllowedPattern: '((2[0-4]\d|25[0-5]|1\d{2}|\d{1,2})\.){3}(2[0-4]\d|25[0-5]|1\d{2}|\d{1,2})/(2[0-8]|1[0-9]|[0-9])'
    ConstraintDescription: 'must be a valid IPv4 CIDR with smallest block of /28'

  PublicAccessCIDR:
    Type: String
    Description: 'The CIDR of IP addresses allowed to access the "public" interfaces of the system'
    AllowedPattern: '((2[0-4]\d|25[0-5]|1\d{2}|\d{1,2})\.){3}(2[0-4]\d|25[0-5]|1\d{2}|\d{1,2})/(3[012]|[12]?\d)'
    ConstraintDescription: 'must be a valid IPv4 CIDR'

  Country:
    Type: String
    Description: 'Value to use in the Country field of the self-signed certificate'

  StateProvinceCounty:
    Type: String
    Description: 'Value to use in the State/Province/County field of the self-signed certificate'

  Locality:
    Type: String
    Description: 'Value to use in the Locality field of the self-signed certificate'

  Organisation:
    Type: String
    Description: 'Value to use in the Organisation field of the self-signed certificate'

  OrganisationalUnit:
    Type: String
    Description: 'Value to use in the Organisational Unit field of the self-signed certificate'

  EmailAddress:
    Type: String
    Description: 'Value to use in the Email Address field of the self-signed certificate'

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "IDOL Deployment Size"
        Parameters:
          - EngineCount
      - Label:
          default: "InstanceType Configuration"
        Parameters:
          - ContentInstanceType
          - DAHInstanceType
          - DIHInstanceType
          - StaticServersInstanceType
          - LicenseServerInstanceType
          - GatewayProxyInstanceType
          - NiFiInstanceType
      - Label:
          default: "License Configuration"
        Parameters:
          - LicenseKeyBucketName
          - LicenseKeyBucketPath
          - LicenseKeyBucketRegion
      - Label:
          default: "Self-Signed Certificate Configuration"
        Parameters:
          - Country
          - StateProvinceCounty
          - Locality
          - Organisation
          - OrganisationalUnit
          - EmailAddress
      - Label:
          default: "NiFi ingest configuration"
        Parameters:
          - NiFiS3Bucket
          - NiFiS3AccessKey
          - NiFiS3SecretKey

Mappings:
  RegionMap:
    us-east-1:
      IDOLNiFi: ami-0a5b738d49e9fab2a
      GatewayProxy: ami-0ab4d1e9cf9a1215a # /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2

Resources:
  NetworkStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://idol-templates.s3.amazonaws.com/network.yaml
      TimeoutInMinutes: 20
      Parameters:
        VpcCIDR: !Ref VpcCIDR
        PublicSubnetCIDR: !Ref PublicSubnetCIDR
        PrivateSubnetCIDR: !Ref PrivateSubnetCIDR
        PublicAccessCIDR: !Ref PublicAccessCIDR
  LicensingStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://idol-templates.s3.amazonaws.com/licensing.yaml
      TimeoutInMinutes: 20
      Parameters:
        LicenseServerInstanceType: !Ref LicenseServerInstanceType
        LicenseKeyBucketName: !Ref LicenseKeyBucketName
        LicenseKeyBucketRegion: !Ref LicenseKeyBucketRegion
        LicenseKeyBucketPath: !Ref LicenseKeyBucketPath
        PrivateSubnetId: !GetAtt NetworkStack.Outputs.PrivateSubnet
        VpcId: !GetAtt NetworkStack.Outputs.VPC
        PublicAccessCIDR: !Ref PublicAccessCIDR
        PrivateSubnetCIDR: !Ref PrivateSubnetCIDR
  EnginesStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://idol-templates.s3.amazonaws.com/engines.yaml
      TimeoutInMinutes: 20
      Parameters:
        ContentInstanceType: !Ref ContentInstanceType
        EngineCount: !Ref EngineCount
        VpcId: !GetAtt NetworkStack.Outputs.VPC
        PrivateSubnetCIDR: !Ref PrivateSubnetCIDR
        LicenseServerPrivateIp: !GetAtt LicensingStack.Outputs.LicenseServerPrivateIP
        ControllerSecurityGroupID: !GetAtt LicensingStack.Outputs.ControllerSecurityGroupID
        PrivateSubnet: !GetAtt NetworkStack.Outputs.PrivateSubnet
        PrivateProfileArn: !GetAtt PrivateProfile.Arn
  DistributedQueryStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://idol-templates.s3.amazonaws.com/distributed-query.yaml
      TimeoutInMinutes: 20
      Parameters:
        DAHInstanceType: !Ref DAHInstanceType
        VpcId: !GetAtt NetworkStack.Outputs.VPC
        PrivateSubnetCIDR: !Ref PrivateSubnetCIDR
        EngineCount: !Ref EngineCount
        ContentWaitData: !GetAtt EnginesStack.Outputs.ContentWaitData
        LicenseServerPrivateIp: !GetAtt LicensingStack.Outputs.LicenseServerPrivateIP
        PrivateSubnet: !GetAtt NetworkStack.Outputs.PrivateSubnet
        ControllerSecurityGroupID: !GetAtt LicensingStack.Outputs.ControllerSecurityGroupID
        PrivateProfile: !Ref PrivateProfile
  DistributedIndexStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://idol-templates.s3.amazonaws.com/distributed-index.yaml
      TimeoutInMinutes: 20
      Parameters:
        DIHInstanceType: !Ref DIHInstanceType
        VpcId: !GetAtt NetworkStack.Outputs.VPC
        PrivateSubnetCIDR: !Ref PrivateSubnetCIDR
        EngineCount: !Ref EngineCount
        ContentWaitData: !GetAtt EnginesStack.Outputs.ContentWaitData
        LicenseServerPrivateIp: !GetAtt LicensingStack.Outputs.LicenseServerPrivateIP
        PrivateSubnet: !GetAtt NetworkStack.Outputs.PrivateSubnet
        ControllerSecurityGroupID: !GetAtt LicensingStack.Outputs.ControllerSecurityGroupID
        PrivateProfile: !Ref PrivateProfile
        PublicSubnetCIDR: !Ref PublicSubnetCIDR
  StaticServersStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://idol-templates.s3.amazonaws.com/static-servers.yaml
      TimeoutInMinutes: 20
      Parameters:
        StaticServersInstanceType: !Ref StaticServersInstanceType
        VpcId: !GetAtt NetworkStack.Outputs.VPC
        PrivateSubnetCIDR: !Ref PrivateSubnetCIDR
        PublicSubnetCIDR: !Ref PublicSubnetCIDR
        LicenseServerPrivateIp: !GetAtt LicensingStack.Outputs.LicenseServerPrivateIP
        ContentWaitData: !GetAtt EnginesStack.Outputs.ContentWaitData
        DAHPrivateIp: !GetAtt DistributedQueryStack.Outputs.DAHPrivateIP
        DIHPrivateIp: !GetAtt DistributedIndexStack.Outputs.DIHPrivateIP
        NiFiPrivateIp: !GetAtt IdolNiFiInstance.PrivateIp
        PrivateSubnet: !GetAtt NetworkStack.Outputs.PrivateSubnet
        PrivateProfile: !Ref PrivateProfile
  GatewayProxyInstance:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          instanceSetup:
            - configInstanceSetup

        configInstanceSetup:
          packages:
            yum:
              httpd: []
              mod_ssl: []

          files:
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
                interval=1
              mode: 000400
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.GatewayProxyInstance.Metadata.AWS::CloudFormation::Init
                action=../../opt/aws/bin/cfn-init --stack ${AWS::StackName} --resource GatewayProxyInstance --region ${AWS::Region}

            /etc/httpd/conf.d/idol.conf:
              content: !Sub 
                - |
                  Listen 443 https
                  Listen 9050 https
                  Listen 9051 https
                  Listen 9070 https
                  Listen 9071 https

                  ProxyRequests Off
                  ProxyPreserveHost On

                  SSLCertificateFile /etc/tls/gateway-cert.pem
                  SSLCipherSuite HIGH:MEDIUM:!aNULL:!MD5:!SEED:!IDEA
                  SSLEngine on
                  SSLProxyEngine on
                  SSLProtocol all -SSLv3
                  SSLProxyCheckPeerCN off
                  SSLProxyCheckPeerExpire off
                  SSLCryptoDevice builtin
                  SSLRandomSeed startup builtin
                  SSLRandomSeed connect builtin

                  ErrorLog logs/ssl_error_log
                  TransferLog logs/ssl_access_log
                  LogLevel warn

                  <VirtualHost _default_:443>
                    <Location /find/>
                      ProxyPass http://${StaticServersPrivateIP}:8000/
                      ProxyPassReverse /
                    </Location>
                  
                    <Location /siteadmin/>
                      ProxyPass http://${StaticServersPrivateIP}:8080/
                      ProxyPassReverse /
                    </Location>
                  
                    <Location /licenseserver/>
                      ProxyPass http://${LicenseServerPrivateIp}:20000/
                      ProxyPassReverse /
                    </Location>
                  </VirtualHost>
                  
                  <VirtualHost *:9070>
                    <Location "/">
                      ProxyPass http://${DIHPrivateIp}:9070/
                      ProxyPassReverse /
                    </Location>
                  </VirtualHost>
                  
                  <VirtualHost *:9071>
                    <Location "/">
                      ProxyPass http://${DIHPrivateIp}:9071/
                      ProxyPassReverse /
                    </Location>
                  </VirtualHost>
                  
                  <VirtualHost *:9050>
                    <Location "/">
                      ProxyPass http://${StaticServersPrivateIP}:9050/
                      ProxyPassReverse /
                    </Location>
                  </VirtualHost>
                  
                  <VirtualHost *:9051>
                    <Location "/">
                      ProxyPass http://${StaticServersPrivateIP}:9051/
                      ProxyPassReverse /
                    </Location>
                  </VirtualHost>
                - LicenseServerPrivateIp: !GetAtt LicensingStack.Outputs.LicenseServerPrivateIP
                  DIHPrivateIp: !GetAtt DistributedIndexStack.Outputs.DIHPrivateIP
                  StaticServersPrivateIP: !GetAtt StaticServersStack.Outputs.StaticServersPrivateIP

          commands:
            01-make_certificate_dir:
              command: "mkdir -p /etc/tls"
            02-check_public_ip:
              command: "GATEWAY_IP=$(curl http://169.254.169.254/latest/meta-data/public-ipv4)"
            03-generate_certificate:
              command: !Sub "openssl req -x509 -sha256 -nodes -days 90 -newkey rsa:4096 -keyout /etc/tls/gateway.key -out /etc/tls/gateway-cert.pem -subj \"/C=${Country}/ST=${StateProvinceCounty}/L=${Locality}/O=${Organisation}/OU=${OrganisationalUnit}/CN=$GATEWAY_IP/emailAddress=${EmailAddress}\""
            04-make_haproxy_certificate:
              command: "cat /etc/tls/gateway.key | tee -a /etc/tls/gateway-cert.pem"
            05-cleanup_key:
              command: "rm /etc/tls/gateway.key"
            06-comment_httpd_welcome_conf:
              command: "sed -i 's/\\(^[^#].*$\\)/#\\1/' /etc/httpd/conf.d/welcome.conf"
            07-remove_httpd_ssl_conf:
              command: "rm /etc/httpd/conf.d/ssl.conf"
            08-remove_httpd_autoindex_conf:
              command: "rm /etc/httpd/conf.d/autoindex.conf"
            09-remove_httpd_userdir_conf:
              command: "rm /etc/httpd/conf.d/userdir.conf"

          services:
            sysvinit:
              httpd:
                enabled: true
                ensureRunning: true

    Properties:
      InstanceType: !Ref GatewayProxyInstanceType
      SecurityGroupIds:
        - !GetAtt NetworkStack.Outputs.GatewayProxySG
      SubnetId: !GetAtt NetworkStack.Outputs.PublicSubnet
      ImageId: !FindInMap [ RegionMap, !Ref AWS::Region, GatewayProxy ]
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          yum install -y aws-cfn-bootstrap
          /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource GatewayProxyInstance --region ${AWS::Region} -c instanceSetup
          /opt/aws/bin/cfn-signal --exit-code $? --stack ${AWS::StackName} --resource GatewayProxyInstance --region ${AWS::Region}
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName} Gateway Proxy Instance"


  RootRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName} RootRole"

  PrivateProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
        - !Ref RootRole

  EndpointSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Traffic into CloudFormation Endpoint"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !Ref PublicAccessCIDR
      VpcId: !GetAtt NetworkStack.Outputs.VPC
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName} EndpointSG"

  IdolNiFiInstance:
    Type: AWS::EC2::Instance
    Properties:
      IamInstanceProfile: !Ref PrivateProfile
      ImageId: !FindInMap [ RegionMap, !Ref AWS::Region, IDOLNiFi ]
      InstanceType: !Ref NiFiInstanceType
      SubnetId: !GetAtt NetworkStack.Outputs.PublicSubnet
      SecurityGroupIds:
        - !GetAtt IdolNiFiSecurityGroup.GroupId
      UserData:
        Fn::Base64: !Sub |
            #!/bin/bash -xe
            # Update aws-cfn-bootstrap to the latest
            yum install -y aws-cfn-bootstrap
            # Call cfn-init script to install files and packages:
            # Anything to do here?
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource IdolNiFiInstance --region ${AWS::Region} -c instanceSetup &&
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource IdolNiFiInstance --region ${AWS::Region} -c importFlow
            # Call cfn-signal script to send a signal with exit code
            /opt/aws/bin/cfn-signal --exit-code $? --stack ${AWS::StackName} --resource IdolNiFiInstance --region ${AWS::Region}
      BlockDeviceMappings:
          - DeviceName: /dev/xvda
            Ebs:
              VolumeSize: 30
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          instanceSetup: 
            - configInstanceSetup
          importFlow:
            - configImportFlow
        configInstanceSetup:
          files:
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
                interval=1
              mode: "000400"
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.IdolNiFiInstance.Metadata.AWS::CloudFormation::Init
                action=../../opt/aws/bin/cfn-init --stack ${AWS::StackName} --resource IdolNiFiInstance --region ${AWS::Region}
                runas=root
            /opt/mf/nifi/blank_flow.json:
              content: |
                {"flowContents":{"identifier":"7e70960f-62e9-3522-a743-6e043dc12ca6","name":"NiFi Flow","comments":"","position":{"x":0.0,"y":0.0},"processGroups":[],"remoteProcessGroups":[],"processors":[],"inputPorts":[],"outputPorts":[],"connections":[],"labels":[],"funnels":[],"controllerServices":[],"variables":{},"componentType":"PROCESS_GROUP","flowFileConcurrency":"UNBOUNDED","flowFileOutboundPolicy":"STREAM_WHEN_AVAILABLE"},"externalControllerServices":{},"parameterContexts":{},"flowEncodingVersion":"1.0"}
              owner: nifi
              group: nifi
              mode: "000644"
            /opt/mf/nifi/import_flow.sh:
              content: |
                #!/bin/bash -xe
                FLOWFILE=$1
                IDOL_HOST=$2
                IDOL_LICENSESERVER_HOST=$3
                S3_BUCKET=$4
                S3_ACCESS=$5
                S3_SECRET=$6
                export JAVA_HOME=/usr/lib/jvm/jre-11
                NIFITOOLKITCMD=/opt/mf/nifi/nifi-toolkit-1.13.2/bin/cli.sh
                echo Blanking root flow and services
                ROOTID=`${NIFITOOLKITCMD} nifi get-root-id`
                ${NIFITOOLKITCMD} nifi pg-disable-services -pgid ${ROOTID}
                ${NIFITOOLKITCMD} nifi pg-replace -pgid ${ROOTID} -i /opt/mf/nifi/blank_flow.json
                echo Importing IDOL NiFi Flow
                BUCKETID=`${NIFITOOLKITCMD} registry create-bucket -u https://localhost:18080 -bn idol-flow`
                echo BUCKETID=${BUCKETID}
                FLOWID=`${NIFITOOLKITCMD} registry create-flow -u https://localhost:18080 -b ${BUCKETID} -fn "IDOL NiFi Flow"`
                echo FLOWID=${FLOWID}
                FLOWVERSION=`${NIFITOOLKITCMD} registry import-flow-version -u https://localhost:18080 -f ${FLOWID} -i /opt/mf/resources/IDOL_NiFi_Flow_v3.json`
                echo FLOWVERSION=${FLOWVERSION}
                PROCESSGROUP=`${NIFITOOLKITCMD} nifi pg-import -b ${BUCKETID} -f ${FLOWID} -fv ${FLOWVERSION}`
                echo PROCESSGROUP=${PROCESSGROUP}
                PARAMCONTEXT=`${NIFITOOLKITCMD} nifi pg-get-param-context -pgid ${PROCESSGROUP}`
                echo PARAMCONTEXT=${PARAMCONTEXT}
                ${NIFITOOLKITCMD} nifi set-param -pcid ${PARAMCONTEXT} -pn "IDOL Host" -pv "${IDOL_HOST}"
                ${NIFITOOLKITCMD} nifi set-param -pcid ${PARAMCONTEXT} -pn "IDOL LicenseServer Host" -pv "${IDOL_LICENSESERVER_HOST}"
                ${NIFITOOLKITCMD} nifi set-param -pcid ${PARAMCONTEXT} -pn "Amazon S3 Bucket" -pv "${S3_BUCKET}"
                echo Setting sensitive values...
                set +x
                ${NIFITOOLKITCMD} nifi set-param -pcid ${PARAMCONTEXT} -pn "Amazon S3 Access Key" -pv "${S3_ACCESS}"
                ${NIFITOOLKITCMD} nifi set-param -pcid ${PARAMCONTEXT} -pn "Amazon S3 Secret Key" -pv "${S3_SECRET}"
                set -x
                echo Enabling services and starting processors...
                ${NIFITOOLKITCMD} nifi pg-enable-services -pgid ${PROCESSGROUP} -verbose
                ${NIFITOOLKITCMD} nifi pg-start -pgid ${PROCESSGROUP} -verbose
              owner: nifi
              group: nifi
              mode: "000744"

          services:
            sysvinit:
              cfn-hup:
                enabled: true
                ensureRunning: true
                files:
                  - /etc/cfn/cfn-hup.conf
                  - /etc/cfn/cfn-auto-reloader.conf

        configImportFlow:
          commands:
            01-flowimport:
              command: !Sub
                - >
                  sudo -u nifi /opt/mf/nifi/import_flow.sh /opt/mf/resources/IDOL_NiFi_Flow_v3.json
                  ${DIHPrivateIp}
                  ${LicenseServerPrivateIp}
                  "${NiFiS3Bucket}"
                  "${NiFiS3AccessKey}"
                  "${NiFiS3SecretKey}"
                - LicenseServerPrivateIp: !GetAtt LicensingStack.Outputs.LicenseServerPrivateIP
                  DIHPrivateIp: !GetAtt DistributedIndexStack.Outputs.DIHPrivateIP
              ignoreErrors: true

    CreationPolicy:
      ResourceSignal:
        Count: 1
        Timeout: PT30M

  IdolNiFiSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !GetAtt NetworkStack.Outputs.VPC
      GroupDescription: Enable access to NiFi ports
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !Ref PublicAccessCIDR
        - IpProtocol: tcp
          FromPort: 10000
          ToPort: 10000
          CidrIp: !Ref PublicAccessCIDR

Outputs:
  Gateway:
    Description: IP of Gateway instance
    Value: !GetAtt GatewayProxyInstance.PublicIp

  Find:
    Description: URL of Find
    Value: !Sub "https://${GatewayProxyInstance.PublicIp}/find/"

  SiteAdmin:
    Description: URL of SiteAdmin
    Value: !Sub "https://${GatewayProxyInstance.PublicIp}/siteadmin/"

  IdolNiFi:
    Description: NiFi UI
    Value: !Sub "https://${IdolNiFiInstance.PublicIp}/nifi"

  IdolNiFiRegistry:
    Description: NiFi Registry UI
    Value: !Sub "https://${IdolNiFiInstance.PublicIp}/nifi-registry"

  LicenseServer:
    Description: URL of LicenseServer
    Value: !Sub "https://${GatewayProxyInstance.PublicIp}/licenseserver/"

  DIHACIEndpoint:
    Description: ACI port of DIH
    Value: !Sub "https://${GatewayProxyInstance.PublicIp}:9070/"

  DIHIndexEndpoint:
    Description: Index port of DIH
    Value: !Sub "https://${GatewayProxyInstance.PublicIp}:9071/"

  AgentstoreACIEndpoint:
    Description: ACI port of Agentstore
    Value: !Sub "https://${GatewayProxyInstance.PublicIp}:9050/"

  AgentstoreIndexEndpoing:
    Description: Index port of Agentstore
    Value: !Sub "https://${GatewayProxyInstance.PublicIp}:9051/"

  InitialPassword:
    Description: "Initial password for Find and SiteAdmin"
    Value: "Initial admin password can be found on the IdolStaticServersInstance in /opt/community/random_password.txt"
  