{
    "Resources": {
        "GatewayProxygatewayProxyEC2InstanceProfile383C4230": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Roles": [{
                    "Ref": "referencetotestCdkBasicIdolStacktestCdkBasicIdolStackrootRole11B9F8D3Ref"
                }]
            }
        },
        "GatewayProxygatewayProxyEC25884947E": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "AvailabilityZone": {
                    "Fn::Select": [0, {
                        "Fn::GetAZs": ""
                    }]
                },
                "IamInstanceProfile": {
                    "Ref": "GatewayProxygatewayProxyEC2InstanceProfile383C4230"
                },
                "ImageId": {
                    "Fn::FindInMap": ["GatewayProxygatewayProxyEC2AmiMapCB3D9B4D", {
                        "Ref": "AWS::Region"
                    }, "ami"]
                },
                "InstanceType": {
                    "Ref": "referencetotestCdkBasicIdolStackGatewayProxyInstanceTypeE9878EC6Ref"
                },
                "SecurityGroupIds": [{
                    "Ref": "referencetotestCdkBasicIdolStackNetworkStackNestedStackNetworkStackNestedStackResourceA7021F01OutputstestCdkBasicIdolStackNetworkStackNetworkStackgatewayProxySGDA2F068AGroupId"
                }],
                "SubnetId": {
                    "Ref": "referencetotestCdkBasicIdolStackNetworkStackNestedStackNetworkStackNestedStackResourceA7021F01OutputstestCdkBasicIdolStackNetworkStackNetworkStackVpcNetworkStacksubnetpublicSubnet1SubnetB0946841Ref"
                },
                "Tags": [{
                    "Key": "Name",
                    "Value": "test-CdkBasicIdolStack/GatewayProxy/GatewayProxy-gatewayProxyEC2"
                }],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": ["", ["#!/bin/bash\nyum install -y aws-cfn-bootstrap\n# fingerprint: 316fa7aeb37749fe\n(\n  set +e\n  /opt/aws/bin/cfn-init -v --region ", {
                            "Ref": "AWS::Region"
                        }, " --stack ", {
                            "Ref": "AWS::StackName"
                        }, " --resource GatewayProxygatewayProxyEC25884947E -c instanceSetup\n  /opt/aws/bin/cfn-signal -e $? --region ", {
                            "Ref": "AWS::Region"
                        }, " --stack ", {
                            "Ref": "AWS::StackName"
                        }, " --resource GatewayProxygatewayProxyEC25884947E\n  cat /var/log/cfn-init.log >&2\n)"]]
                    }
                }
            },
            "CreationPolicy": {
                "ResourceSignal": {
                    "Timeout": "PT10M"
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "instanceSetup": ["configInstanceSetup"]
                    },
                    "configInstanceSetup": {
                        "packages": {
                            "yum": {
                                "httpd": [],
                                "mod_ssl": []
                            }
                        },
                        "files": {
                            "/etc/cfn/cfn-hup.conf": {
                                "content": {
                                    "Fn::Join": ["", ["[main]\nstack=", {
                                        "Ref": "AWS::StackId"
                                    }, "\nregion=", {
                                        "Ref": "AWS::Region"
                                    }, "\ninterval=1"]]
                                },
                                "encoding": "plain",
                                "mode": "000400",
                                "owner": "root",
                                "group": "root"
                            },
                            "/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
                                "content": {
                                    "Fn::Join": ["", [
                                        "[cfn-auto-reloader-hook]\ntriggers=post.update,\npath=Resources.GatewayProxygatewayProxyEC25884947E.Metadata.AWS::CloudFormation::Init,\naction=../../opt/aws/bin/cfn-init  --stack ", {
                                            "Ref": "AWS::StackId"
                                        }, " --resource GatewayProxygatewayProxyEC25884947E --region ", {
                                            "Ref": "AWS::Region"
                                        }, "\nrunas=root"
                                    ]]
                                },
                                "encoding": "plain",
                                "mode": "000400",
                                "owner": "root",
                                "group": "root"
                            },
                            "/etc/httpd/conf.d/idol.conf": {
                                "content": {
                                    "Fn::Join": ["", [
                                        "Listen 443 https\nListen 9050 https\nListen 9051 https\nListen 9070 https\nListen 9071 https\n\nProxyRequests Off\nProxyPreserveHost On\n\nSSLCertificateFile /etc/tls/gateway-cert.pem\nSSLCipherSuite HIGH:MEDIUM:!aNULL:!MD5:!SEED:!IDEA\nSSLEngine on\nSSLProxyEngine on\nSSLProtocol all -SSLv3\nSSLProxyCheckPeerCN off\nSSLProxyCheckPeerExpire off\nSSLCryptoDevice builtin\nSSLRandomSeed startup builtin\nSSLRandomSeed connect builtin\n\nErrorLog logs/ssl_error_log\nTransferLog logs/ssl_access_log\nLogLevel warn\n\n<VirtualHost _default_:443>\n<Location /find/>\nProxyPass http://", {
                                            "Ref": "referencetotestCdkBasicIdolStackStaticServersNestedStackStaticServersNestedStackResourceE434428COutputstestCdkBasicIdolStackStaticServersStaticServersstaticServersEC28049B14CPrivateIp"
                                        }, ":8000/\nProxyPassReverse /\n</Location>\n\n<Location /siteadmin/>\nProxyPass http://", {
                                            "Ref": "referencetotestCdkBasicIdolStackStaticServersNestedStackStaticServersNestedStackResourceE434428COutputstestCdkBasicIdolStackStaticServersStaticServersstaticServersEC28049B14CPrivateIp"
                                        }, ":8080/\nProxyPassReverse /\n</Location>\n\n<Location /licenseserver/>\nProxyPass http://", {
                                            "Ref": "referencetotestCdkBasicIdolStackLicensingNestedStackLicensingNestedStackResource12430BEAOutputstestCdkBasicIdolStackLicensingLicensinglsEC2CB10DCC5PrivateIp"
                                        }, ":20000/\nProxyPassReverse /\n</Location>\n</VirtualHost>\n\n<VirtualHost *:9070>\n<Location \"/\">\nProxyPass http://", {
                                            "Ref": "referencetotestCdkBasicIdolStackDIHNestedStackDIHNestedStackResource05FEC6F1OutputstestCdkBasicIdolStackDIHDIHdihEC201EC9E31PrivateIp"
                                        }, ":9070/\nProxyPassReverse /\n</Location>\n</VirtualHost>\n\n<VirtualHost *:9071>\n<Location \"/\">\nProxyPass http://", {
                                            "Ref": "referencetotestCdkBasicIdolStackDIHNestedStackDIHNestedStackResource05FEC6F1OutputstestCdkBasicIdolStackDIHDIHdihEC201EC9E31PrivateIp"
                                        }, ":9071/\nProxyPassReverse /\n</Location>\n</VirtualHost>\n\n<VirtualHost *:9050>\n<Location \"/\">\nProxyPass http://", {
                                            "Ref": "referencetotestCdkBasicIdolStackStaticServersNestedStackStaticServersNestedStackResourceE434428COutputstestCdkBasicIdolStackStaticServersStaticServersstaticServersEC28049B14CPrivateIp"
                                        }, ":9050/\nProxyPassReverse /\n</Location>\n</VirtualHost>\n\n<VirtualHost *:9051>\n<Location \"/\">\nProxyPass http://", {
                                            "Ref": "referencetotestCdkBasicIdolStackStaticServersNestedStackStaticServersNestedStackResourceE434428COutputstestCdkBasicIdolStackStaticServersStaticServersstaticServersEC28049B14CPrivateIp"
                                        }, ":9051/\nProxyPassReverse /\n</Location>\n</VirtualHost>"
                                    ]]
                                },
                                "encoding": "plain",
                                "mode": "000644",
                                "owner": "root",
                                "group": "root"
                            }
                        },
                        "commands": {
                            "000": {
                                "command": "mkdir -p /etc/tls"
                            },
                            "001": {
                                "command": "GATEWAY_IP=$(curl http://169.254.169.254/latest/meta-data/public-ipv4)"
                            },
                            "002": {
                                "command": {
                                    "Fn::Join": ["", ["openssl req -x509 -sha256 -nodes -days 90 -newkey rsa:4096 -keyout /etc/tls/gateway.key -out /etc/tls/gateway-cert.pem -subj \"/C=", {
                                        "Ref": "referencetotestCdkBasicIdolStackCountryB763C38ARef"
                                    }, "/ST=", {
                                        "Ref": "referencetotestCdkBasicIdolStackStateProvinceCounty1EC02E4ARef"
                                    }, "/L=", {
                                        "Ref": "referencetotestCdkBasicIdolStackLocalityE9FDD18FRef"
                                    }, "/O=", {
                                        "Ref": "referencetotestCdkBasicIdolStackOrganisation8F9C1077Ref"
                                    }, "/OU=", {
                                        "Ref": "referencetotestCdkBasicIdolStackOrganisationalUnit25DF06DCRef"
                                    }, "/CN=$GATEWAY_IP/emailAddress=", {
                                        "Ref": "referencetotestCdkBasicIdolStackEmailAddress0A1EE4DARef"
                                    }, "\""]]
                                }
                            },
                            "003": {
                                "command": "cat /etc/tls/gateway.key | tee -a /etc/tls/gateway-cert.pem"
                            },
                            "004": {
                                "command": "rm /etc/tls/gateway.key"
                            },
                            "005": {
                                "command": "sed -i 's/\\(^[^#].*$\\)/#\\1/' /etc/httpd/conf.d/welcome.conf"
                            },
                            "006": {
                                "command": "rm /etc/httpd/conf.d/ssl.conf"
                            },
                            "007": {
                                "command": "rm /etc/httpd/conf.d/autoindex.conf"
                            },
                            "008": {
                                "command": "rm /etc/httpd/conf.d/userdir.conf"
                            }
                        },
                        "services": {
                            "sysvinit": {
                                "httpd": {
                                    "enabled": true,
                                    "ensureRunning": true
                                },
                                "cfn-hup": {
                                    "enabled": true,
                                    "ensureRunning": true,
                                    "files": ["/etc/cfn/cfn-hup.conf", "/etc/cfn/hooks.d/cfn-auto-reloader.conf"]
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "Mappings": {
        "GatewayProxygatewayProxyEC2AmiMapCB3D9B4D": {
            "us-east-1": {
                "ami": "ami-0ab4d1e9cf9a1215a"
            }
        }
    },
    "Parameters": {
        "referencetotestCdkBasicIdolStacktestCdkBasicIdolStackrootRole11B9F8D3Ref": {
            "Type": "String"
        },
        "referencetotestCdkBasicIdolStackGatewayProxyInstanceTypeE9878EC6Ref": {
            "Type": "String"
        },
        "referencetotestCdkBasicIdolStackNetworkStackNestedStackNetworkStackNestedStackResourceA7021F01OutputstestCdkBasicIdolStackNetworkStackNetworkStackgatewayProxySGDA2F068AGroupId": {
            "Type": "String"
        },
        "referencetotestCdkBasicIdolStackNetworkStackNestedStackNetworkStackNestedStackResourceA7021F01OutputstestCdkBasicIdolStackNetworkStackNetworkStackVpcNetworkStacksubnetpublicSubnet1SubnetB0946841Ref": {
            "Type": "String"
        },
        "referencetotestCdkBasicIdolStackStaticServersNestedStackStaticServersNestedStackResourceE434428COutputstestCdkBasicIdolStackStaticServersStaticServersstaticServersEC28049B14CPrivateIp": {
            "Type": "String"
        },
        "referencetotestCdkBasicIdolStackLicensingNestedStackLicensingNestedStackResource12430BEAOutputstestCdkBasicIdolStackLicensingLicensinglsEC2CB10DCC5PrivateIp": {
            "Type": "String"
        },
        "referencetotestCdkBasicIdolStackDIHNestedStackDIHNestedStackResource05FEC6F1OutputstestCdkBasicIdolStackDIHDIHdihEC201EC9E31PrivateIp": {
            "Type": "String"
        },
        "referencetotestCdkBasicIdolStackCountryB763C38ARef": {
            "Type": "String"
        },
        "referencetotestCdkBasicIdolStackStateProvinceCounty1EC02E4ARef": {
            "Type": "String"
        },
        "referencetotestCdkBasicIdolStackLocalityE9FDD18FRef": {
            "Type": "String"
        },
        "referencetotestCdkBasicIdolStackOrganisation8F9C1077Ref": {
            "Type": "String"
        },
        "referencetotestCdkBasicIdolStackOrganisationalUnit25DF06DCRef": {
            "Type": "String"
        },
        "referencetotestCdkBasicIdolStackEmailAddress0A1EE4DARef": {
            "Type": "String"
        }
    },
    "Outputs": {
        "testCdkBasicIdolStackGatewayProxyGatewayProxygatewayProxyEC2448B7D64PublicIp": {
            "Value": {
                "Fn::GetAtt": ["GatewayProxygatewayProxyEC25884947E", "PublicIp"]
            }
        }
    }
}
